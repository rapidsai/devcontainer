name: Build and test devcontainer images

on:
  workflow_call:
    inputs:
      os:
        type: string
        required: true
      features:
        type: string
        required: true
      container_env:
        type: string
        required: false

jobs:

  build-and-test:
    name: Build and test
    runs-on: ${{ fromJSON(inputs.os == 'windows' && format('"windows-{0}"', matrix.runner) || github.repository != 'rapidsai/devcontainers' && '"ubuntu-latest"' || format('"linux-{0}-cpu4"', matrix.arch)) }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{
          fromJSON(inputs.os == 'windows' &&
            '[{"runner":"2019","edition":"2019","arch":"amd64"},
              {"runner":"2022","edition":"2022","arch":"amd64"}]' ||
            '[{"arch":"amd64"},{"arch":"arm64"}]') }}
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - if: inputs.os != 'windows'
        id: json
        name: Write .devcontainer.json
        uses: ./.github/actions/devcontainer-json
        with:
          os: "${{ inputs.os }}"
          features: "${{ inputs.features }}"
          container_env: "${{ inputs.container_env }}"

      - if: inputs.os != 'windows'
        name: Build and test ${{ steps.json.outputs.tag }}-${{ matrix.arch }}
        uses: ./.github/actions/build-image
        with:
          os: "${{ inputs.os }}"
          arch: "${{ matrix.arch }}"
          tag: "${{ steps.json.outputs.tag }}"
          repo: "${{ vars.DOCKERHUB_REPOSITORY || github.repository }}"

      - if: inputs.os == 'windows'
        id: info
        name: Get Windows container info
        shell: bash
        run: |
          cat <<EOF | tee "$GITHUB_ENV"
          cuda=${{ fromJSON(inputs.features)[0].version }}
          cl=${{ fromJSON(inputs.features)[1].version }}
          version=$(git describe --abbrev=0 --tags | sed 's/[a-zA-Z]//g' | cut -d '.' -f -2)
          EOF

      - if: inputs.os == 'windows'
        name: Build and test cuda${{ env.cuda }}-${{ inputs.os }}${{ matrix.edition }}
        uses: ./.github/actions/build-image
        with:
          arch: "${{ matrix.arch }}"
          os: "${{ inputs.os }}"
          cl: "${{ env.cl }}"
          cuda: "${{ env.cuda }}"
          version: "${{ env.version }}"
          edition: "${{ matrix.edition }}"
          repo: "${{ vars.DOCKERHUB_REPOSITORY || github.repository }}"
          tag: "${{ env.version }}-cuda${{ env.cuda }}-cl${{ env.cl }}-${{ inputs.os }}${{ matrix.edition }}"
