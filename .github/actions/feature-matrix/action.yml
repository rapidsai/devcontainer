name: feature-matrix

description: Determine the feature matrix

inputs:
  full_matrix:
    type: boolean
    default: false

outputs:
  features:
    value: ${{ steps.matrix.outputs.features }}
  scenarios:
    value: ${{ steps.matrix.outputs.scenarios }}

runs:
  using: composite
  steps:
    - name: Check if files changed
      if: inputs.full_matrix != true
      id: changes
      uses: tj-actions/changed-files@v35.4.4
      with:
        files: |
          features/src/**
          features/test/**
          images/matrix.yml
          .github/workflows/build-and-test-feature.yml
          .github/actions/build-and-test-feature/action.yml
#          .github/workflows/test.yml
#          .github/actions/feature-matrix/action.yml

    - name: Report changes
      if: inputs.full_matrix != true
      shell: bash
      run: echo '${{ toJSON(steps.changes.outputs) }}'

    - name: Determine the feature matrix
      id: matrix
      shell: bash
      run: |
        join_with_delimiter() {
          local IFS='' delim=$1; shift; echo -n "$1"; shift; echo -n "${*/#/$delim}";
        }

        find_features_with_tests() {
          find ${@:2} -mindepth 1 -type f -name "$1" ! -wholename '*/test/_global/*' \
            -exec bash -c 'echo {} | sed -r s@features/test/\(.*\)/.*@\\1@' \;       \
          | sort | uniq                                                              ;
        }

        features="";
        scenarios="";
        files="${{ steps.changes.outputs.all_modified_files }}";

        if echo "$files" | grep -q ".github/"; then
          features="$(find_features_with_tests 'test.sh' 'features/test')";
          scenarios="$(find_features_with_tests 'scenarios.json' 'features/test')";
        elif echo "$files" | grep -q "features/"; then
          files="$(join_with_delimiter "\n" $files | grep "features/")";
          changed=();
          for x in ${files}; do
            x="${x##features/src/}";
            x="${x##features/test/}";
            x="features/test/${x%%/*}";
            changed+=("${x}");
          done;
          changed="${changed[@]}";
          features="$(find_features_with_tests 'test.sh' ${changed})";
          scenarios="$(find_features_with_tests 'scenarios.json' ${changed})";
        elif [[ "${{ inputs.full_matrix }}" == true ]]; then
          features="$(find_features_with_tests 'test.sh' 'features/test')";
          scenarios="$(find_features_with_tests 'scenarios.json' 'features/test')";
        fi

        if [[ -n "$(echo "$features")" ]]; then
          features="[\"$(join_with_delimiter '","' $features)\"]";
        fi

        echo "features=${features:-[]}" | tee -a $GITHUB_OUTPUT;

        if [[ -n "$(echo "$scenarios")" ]]; then
          scenarios="[\"$(join_with_delimiter '","' $scenarios)\"]";
        fi

        echo "scenarios=${scenarios:-[]}" | tee -a $GITHUB_OUTPUT;
