name: build-image

description: Build image

inputs:
  os:
    type: string
    required: true
    description: Image OS
  tag:
    type: string
    required: true
    description: Image tag
  arch:
    type: string
    required: true
    description: Image arch
  repo:
    type: string
    required: true
    description: Image repo
  cuda:
    type: string
    required: false
  msvc:
    type: string
    required: false
  edition:
    type: string
    required: false
  isolation:
    type: string
    required: false
    default: process
  version:
    type: string
    required: false

outputs:
  repo:
    value: ${{ steps.linux-build.outputs.repo || '' }}

runs:
  using: composite
  steps:

    - if: inputs.os != 'windows'
      name: Setup runner environment
      uses: ./.github/actions/setup-runner-env

    - if: inputs.os != 'windows'
      name: Copy common scripts into features
      uses: ./.github/actions/copy-common-scripts

    - if: inputs.os != 'windows'
      name: Install devcontainers CLI
      uses: ./.github/actions/install-devcontainers-cli

    - if: inputs.os != 'windows'
      id: linux-build
      name: Build ${{ inputs.repo }}:${{ inputs.tag }}-${{ inputs.arch }}
      shell: bash
      env:
        NODE_NO_WARNINGS: 1
      run: |
        repo="$(echo "${{ inputs.repo }}" | tr '[:upper:]' '[:lower:]')";
        echo "repo=${repo}" >> $GITHUB_OUTPUT;

        devcontainer build \
          --platform "linux/${{ inputs.arch }}" \
          --cache-from "${repo}:${{ inputs.tag }}" \
          --image-name "${repo}:${{ inputs.tag }}" \
          --workspace-folder "$(realpath -m ./image)" \
          --output "type=docker,dest=${{ runner.temp }}/${{ inputs.arch }}.tar" \
          ;

    - if: inputs.os == 'windows'
      id: windows-build
      name: Build ${{ inputs.repo }}:${{ inputs.version }}-cuda${{ inputs.cuda }}-msvc${{ inputs.msvc }}-${{ inputs.os }}${{ inputs.edition }}
      shell: powershell
      run: |
        .github/actions/build-image/action.ps1 `
          -repo ${{ inputs.repo }}             `
          -repoVersion ${{ inputs.version }}   `
          -cudaVersion ${{ inputs.cuda }}      `
          -msvcVersion ${{ inputs.msvc }}      `
          -isolation ${{ inputs.isolation }}   `
          -edition windows-${{ inputs.edition }}
